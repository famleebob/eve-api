# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: config/edge_node_cluster.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1e\x63onfig/edge_node_cluster.proto\x12\x15org.lfedge.eve.config\"\xd0\x02\n\x0f\x45\x64geNodeCluster\x12\x13\n\x0b\x43lusterName\x18\x01 \x01(\t\x12\x11\n\tClusterID\x18\x02 \x01(\t\x12\x18\n\x10\x43lusterInterface\x18\x03 \x01(\t\x12\x17\n\x0f\x43lusterIPPrefix\x18\x04 \x01(\t\x12\x14\n\x0cIsSeedServer\x18\x05 \x01(\x08\x12\x0f\n\x07IsAgent\x18\x06 \x01(\x08\x12\x14\n\x0cSeedServerIP\x18\x07 \x01(\t\x12\x1d\n\x15\x45ncryptedClusterToken\x18\x08 \x01(\t\x12P\n\rResourceLabel\x18\t \x03(\x0b\x32\x39.org.lfedge.eve.config.EdgeNodeCluster.ResourceLabelEntry\x1a\x34\n\x12ResourceLabelEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42=\n\x15org.lfedge.eve.configZ$github.com/lf-edge/eve-api/go/configb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'config.edge_node_cluster_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\025org.lfedge.eve.configZ$github.com/lf-edge/eve-api/go/config'
  _EDGENODECLUSTER_RESOURCELABELENTRY._options = None
  _EDGENODECLUSTER_RESOURCELABELENTRY._serialized_options = b'8\001'
  _globals['_EDGENODECLUSTER']._serialized_start=58
  _globals['_EDGENODECLUSTER']._serialized_end=394
  _globals['_EDGENODECLUSTER_RESOURCELABELENTRY']._serialized_start=342
  _globals['_EDGENODECLUSTER_RESOURCELABELENTRY']._serialized_end=394
# @@protoc_insertion_point(module_scope)
